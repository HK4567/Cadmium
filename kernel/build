#!/bin/bash
CADMIUMROOT=$(dirname $(dirname $(realpath $0)))

set -e

[ -z "$TARGET" ] && source $CADMIUMROOT/config

source $CADMIUMROOT/flavor/$FLAV

mkdir -p $CADMIUMROOT/tmp
cd $CADMIUMROOT/tmp

[ -z "$KTREE" ] && export KTREE=mainline

case $KTREE in
	mainline)
		PATCHSUFFIX="patch"
		# check if kernel has been downloaded this week, if not download/update it
		if [ "$(date +'%V%y')" != "$(cat kern-dl-date-$ARCH 2>/dev/null)" -o "$(cat ktree)" != "mainline" ]; then
			echo "Downloading kernel for $ARCH"
			curl -L "$(curl -sL https://www.kernel.org/ | grep "Download complete tarball" | head -n1 | tr '"' ' ' | awk '{print $3}')" -o Linux-archive
			rm -rf linux-$ARCH

			echo "$(date +'%V%y')" > $CADMIUMROOT/tmp/kern-dl-date-$ARCH
		fi
		if [ ! -d "linux-$ARCH" ]; then
			mkdir linux-$ARCH
			bsdtar xf Linux-archive --strip-components=1 -C linux-$ARCH
		fi
	;;
	*.git)
		PATCHSUFFIX="$KTREE_NAME"
		if [ ! -d "linux-$ARCH" -o "$(cat ktree)" != "$KTREE" ]; then
			rm -rf "linux-$ARCH"
			git clone "$KTREE" "linux-$ARCH"
		else
			git -C "linux-$ARCH" fetch
		fi
		git -C "linux-$ARCH" checkout "$KTREE_GIT_REV"
	;;
esac

cd $CADMIUMROOT/tmp/linux-$ARCH

echo "$KTREE" > "$CADMIUMROOT/tmp/ktree"

if [ ! -e "./.cadmium-patched" ]; then
	for x in $(ls $CADMIUMROOT/kernel/patches/*.$PATCHSUFFIX); do
		echo "Applying $x"
		patch -p1 --forward < $x
	done
	for x in $(ls $CADMIUMROOT/kernel/patches/*.common_patch); do
		echo "Applying $x"
		patch -p1 --forward < $x
	done
	touch "./.cadmium-patched"
fi

[ -f .config ] || cp "$CADMIUMROOT/kernel/config.$ARCH" .config

make oldconfig LLVM=1
#make nconfig LLVM=1 # if you want to customize config just uncomment this

echo "Bulding kernel for $ARCH in $(pwd) with $THREADS threads"
time make -j"$THREADS" LLVM=1

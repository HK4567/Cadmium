#!/bin/bash
CADMIUMROOT="$(dirname $(dirname $(dirname $(realpath $0))))"

set -e
set -x

echo "Packaging kernel for depthcharge machines"

[ -z "$CADMIUMROOT" ] && exit 1

VBUTIL_KERNEL=""
if which vbutil_kernel >/dev/null 2>&1; then
	VBUTIL_KERNEL="vbutil_kernel"
elif which futility >/dev/null 2>&1; then
	VBUTIL_KERNEL="futility vbutil_kernel"
else
	echo "vbutil_kernel not found"
	exit 1
fi

source "$CADMIUMROOT/config"
source "$CADMIUMROOT/flavor/$FLAV"

cd "$CADMIUMROOT/tmp/linux-$ARCH"

[ "$ARCH" != arm ] && lz4 -z -f "arch/$ARCH/boot/Image" c_linux.lz4

# TODO: generate
cp "$CADMIUMROOT/kernel/$ARCH.kernel.its" kernel.its
cp "$CADMIUMROOT/kernel/cmdline" cmdline
cp "$CADMIUMROOT/kernel/cmdline.p2" cmdline.p2

# make kernel partition
# yes this is stolen from solidhal's prawnos
mkimage -D "-I dts -O dtb -p 2048" -f kernel.its vmlinux.uimg || true # HACK, kernel.its needs fixing
dd if=/dev/zero of=bootloader.bin bs=512 count=1
$VBUTIL_KERNEL --pack vmlinux.kpart \
	--version 1 \
	--vmlinuz vmlinux.uimg \
	--arch arm \
	--keyblock /usr/share/vboot/devkeys/kernel.keyblock \
	--signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
	--config cmdline \
	--bootloader bootloader.bin

cp vmlinux.kpart "$CADMIUMROOT/tmp/"

$VBUTIL_KERNEL --pack vmlinux.kpart.p2 \
	--version 1 \
	--vmlinuz vmlinux.uimg \
	--arch arm \
	--keyblock /usr/share/vboot/devkeys/kernel.keyblock \
	--signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
	--config cmdline.p2 \
	--bootloader bootloader.bin

cp vmlinux.kpart.p2 "$CADMIUMROOT/tmp/"

cp "$CADMIUMROOT/kernel/cmdline.oxide" ./
$VBUTIL_KERNEL --pack oxide.kpart \
	--version 1 \
	--vmlinuz vmlinux.uimg \
	--arch arm \
	--keyblock /usr/share/vboot/devkeys/kernel.keyblock \
	--signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
	--config cmdline.oxide \
	--bootloader bootloader.bin
cp oxide.kpart "$CADMIUMROOT/tmp/"
